/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"


//==============================================================================
/**
*/
class NewProjectAudioProcessorEditor  : public AudioProcessorEditor,
                                        public SliderListener,
                                        public Timer,
                                        public ButtonListener
{
public:
    NewProjectAudioProcessorEditor (NewProjectAudioProcessor* ownerFilter);
    ~NewProjectAudioProcessorEditor();
    
    
    //==============================================================================
    // This is just a standard Juce paint method...
    void timerCallback() override;
    void paint (Graphics& g);
    void resized() override;
    void buttonClicked (Button *button) override;
    void sliderValueChanged(Slider *slide) override;
private:
    Label title,FBLabel,intensityLabel,RrateLabel,ReverbLabel,ModeLabel;
    Slider FBGainSlider,intensitySlider,RrateSlider,ReverbSlider,ModeSlider;
    TextButton BypassButton,OldButton;
    ScopedPointer<ResizableCornerComponent> resizer;
    ComponentBoundsConstrainer resizeLimits;
    
    AudioPlayHead::CurrentPositionInfo lastDisplayedPosition;
    
    NewProjectAudioProcessor *getProcessor() const
    {
        return static_cast<NewProjectAudioProcessor*>(getAudioProcessor());
    }

    bool Bypass;
    bool Old;
    
    
};


#endif  // PLUGINEDITOR_H_INCLUDED
